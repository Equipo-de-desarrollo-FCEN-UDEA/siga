version: '3,3'

services:
  db: 
    container_name: 'db'
    image: postgres:latest
    ports:
      - '5432:5432'
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - local-net
    volumes:
      - ./db/postgres-data:/var/lib/postgresql/data
  
  pgadmin:
    container_name: 'pgadmin'
    image: dpage/pgadmin4
    ports:
      - '80:80'
    depends_on:
      - db
    env_file:
      - .env

  redis:
    container_name: 'redis'
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - local-net
    depends_on:
      - db

  celery_worker:
    container_name: "celery_worker"
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.core.celery_worker.celery worker --loglevel=info
    env_file:
      - .env
    volumes:
      - ./celery-data:/usr/src/server
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend
    networks:
      - local-net
  
  flower:
    container_name: "flower"
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A app.core.celery_worker.celery flower --port=5555
    env_file:
      - .env
    volumes:
      - ./app:/usr/src/server
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - celery_worker
    networks:
      - local-net
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - pgadmin
    env_file:
      - .env
    restart: on-failure
    networks:
      - local-net
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app

networks:
  local-net:
    driver: bridge